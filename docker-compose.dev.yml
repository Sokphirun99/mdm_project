version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: mdm_db_dev
    command: postgres -c timezone=Asia/Phnom_Penh -c log_timezone=Asia/Phnom_Penh
    environment:
      POSTGRES_DB: mdm_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mdm
      TZ: Asia/Phnom_Penh
      PGTZ: Asia/Phnom_Penh
    ports:
      - "5435:5432"
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mdm_database"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./backend-server
      dockerfile: Dockerfile
    container_name: mdm_backend_dev
    environment:
      NODE_ENV: development
      PORT: 3000
      SERVER_URL: ${SERVER_URL:-http://localhost:3000}
      DATABASE_URL: postgresql://postgres:mdm@db:5432/mdm_database?schema=public
      JWT_SECRET: dev-secret-key
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:8080,http://localhost:5173}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin1234}
      ADMIN_FIRST_NAME: ${ADMIN_FIRST_NAME:-Admin}
      ADMIN_LAST_NAME: ${ADMIN_LAST_NAME:-User}
      RATE_LIMIT_WINDOW: 900000
      RATE_LIMIT_MAX: 100
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for development (watch mode)
      - ./backend-server/src:/app/src
      - ./backend-server/prisma:/app/prisma
    restart: unless-stopped

  admin:
    build: 
      context: ./react-admin-panel
      dockerfile: Dockerfile
      args:
        API_BASE_URL: ${API_BASE_URL:-http://localhost:3000/api}
    container_name: mdm_admin_dev
    depends_on:
      - backend
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  db_data_dev:
    driver: local
