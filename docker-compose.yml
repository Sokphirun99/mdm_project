services:
  db:
    image: postgres:15-alpine
    container_name: mdm_db
    environment:
      POSTGRES_DB: mdm_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mdm
    ports:
      - "5435:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mdm_database"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./backend-server
    container_name: mdm_backend
    environment:
      NODE_ENV: production
      PORT: 3000
      # Used by /api/devices/enrollment/qr-code to embed the API base URL into the QR
      # Set to your LAN IP when enrolling physical devices, e.g. http://192.168.1.50:3000
      SERVER_URL: ${SERVER_URL:-http://localhost:3000}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: mdm_database
      DB_USER: postgres
      DB_PASSWORD: mdm
      # optional: set to any non-empty value to enable SSL to DB
      # DB_SSL: ""
      JWT_SECRET: change-me-in-prod
      # Comma-separated origins (exact match). Defaults to localhost admin only.
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:8080}
      # optional: initial admin credentials for first-time seed
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin1234}
      ADMIN_FIRST_NAME: ${ADMIN_FIRST_NAME:-Admin}
      ADMIN_LAST_NAME: ${ADMIN_LAST_NAME:-User}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    restart: unless-stopped

  admin:
    build:
      context: ./flutter-admin-panel
      args:
        # The admin UI will call the backend at this base URL
        # Set to your LAN IP when accessing admin from other devices
        API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
    container_name: mdm_admin
    depends_on:
      - backend
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  db_data:
    driver: local
